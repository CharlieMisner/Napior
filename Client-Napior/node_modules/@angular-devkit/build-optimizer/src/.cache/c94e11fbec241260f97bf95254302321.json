{"remainingRequest":"/home/charlie/Dev-Napior/Client-Napior/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/charlie/Dev-Napior/Client-Napior/node_modules/angularfire2/database/list/state-changes.js","dependencies":[{"path":"/home/charlie/Dev-Napior/Client-Napior/node_modules/angularfire2/database/list/state-changes.js","mtime":1512166717000},{"path":"/home/charlie/Dev-Napior/Client-Napior/node_modules/cache-loader/dist/cjs.js","mtime":1519022243022},{"path":"/home/charlie/Dev-Napior/Client-Napior/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519022242042}],"contextDependencies":[],"result":["import { fromRef } from '../observable/fromRef';\nimport { validateEventsArray } from './utils';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/scan';\nexport function createStateChanges(query) {\n    return function (events) { return stateChanges(query, events); };\n}\nexport function stateChanges(query, events) {\n    events = (validateEventsArray(events));\n    var childEvent$ = events.map(function (event) { return fromRef(query, event); });\n    return Observable.merge.apply(Observable, childEvent$);\n}\n//# sourceMappingURL=state-changes.js.map",null]}