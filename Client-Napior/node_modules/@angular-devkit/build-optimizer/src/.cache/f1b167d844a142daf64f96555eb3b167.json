{"remainingRequest":"/home/charlie/Dev-Napior/Client-Napior/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/charlie/Dev-Napior/Client-Napior/node_modules/firebase/node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/ValueIndex.js","dependencies":[{"path":"/home/charlie/Dev-Napior/Client-Napior/node_modules/firebase/node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/ValueIndex.js","mtime":1519022243190},{"path":"/home/charlie/Dev-Napior/Client-Napior/node_modules/cache-loader/dist/cjs.js","mtime":1519022243022},{"path":"/home/charlie/Dev-Napior/Client-Napior/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519022242042}],"contextDependencies":[],"result":["\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Index_1 = require(\"./Index\");\nvar Node_1 = require(\"../Node\");\nvar util_1 = require(\"../../util/util\");\nvar nodeFromJSON_1 = require(\"../nodeFromJSON\");\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nvar ValueIndex = /*@__PURE__*/ (function (_super) {\n    __extends(ValueIndex, _super);\n    function ValueIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.compare = function (a, b) {\n        var indexCmp = a.node.compareTo(b.node);\n        if (indexCmp === 0) {\n            return util_1.nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.isDefinedOn = function (node) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.equals(newNode);\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.maxPost = function () {\n        return Node_1.NamedNode.MAX;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    ValueIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = nodeFromJSON_1.nodeFromJSON(indexValue);\n        return new Node_1.NamedNode(name, valueNode);\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    ValueIndex.prototype.toString = function () {\n        return '.value';\n    };\n    return ValueIndex;\n}(Index_1.Index));\nexports.ValueIndex = ValueIndex;\nexports.VALUE_INDEX = new ValueIndex();\n",null]}