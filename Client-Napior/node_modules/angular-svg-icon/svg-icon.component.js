import { Component, ElementRef, Input, Optional, Renderer, SkipSelf } from '@angular/core';
import { Http } from '@angular/http';
import { SvgIconRegistryService } from './svg-icon-registry.service';
var SvgIconComponent = (function () {
    function SvgIconComponent(element, renderer, iconReg) {
        this.element = element;
        this.renderer = renderer;
        this.iconReg = iconReg;
    }
    SvgIconComponent.prototype.ngOnInit = function () {
        this.init();
    };
    SvgIconComponent.prototype.ngOnDestroy = function () {
        this.destroy();
    };
    SvgIconComponent.prototype.ngOnChanges = function (changeRecord) {
        if (changeRecord['src']) {
            this.destroy();
            this.init();
        }
    };
    SvgIconComponent.prototype.init = function () {
        var _this = this;
        this.icnSub = this.iconReg.loadSvg(this.src).subscribe(function (svg) {
            _this.setSvg(svg);
        });
    };
    SvgIconComponent.prototype.destroy = function () {
        if (this.icnSub) {
            this.icnSub.unsubscribe();
        }
    };
    SvgIconComponent.prototype.setSvg = function (svg) {
        var icon = svg.cloneNode(true);
        var elem = this.element.nativeElement;
        elem.innerHTML = '';
        this.renderer.projectNodes(elem, [icon]);
    };
    return SvgIconComponent;
}());
export { SvgIconComponent };
SvgIconComponent.decorators = [
    { type: Component, args: [{
                selector: 'svg-icon',
                styles: [':host { display:inline-block; }'],
                template: '<ng-content></ng-content>'
            },] },
];
SvgIconComponent.ctorParameters = function () { return [
    { type: ElementRef, },
    { type: Renderer, },
    { type: SvgIconRegistryService, },
]; };
SvgIconComponent.propDecorators = {
    'src': [{ type: Input },],
};
export function SVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, http) {
    return parentRegistry || new SvgIconRegistryService(http);
}
export var SVG_ICON_REGISTRY_PROVIDER = {
    provide: SvgIconRegistryService,
    deps: [[new Optional(), new SkipSelf(), SvgIconRegistryService], Http],
    useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY
};
//# sourceMappingURL=svg-icon.component.js.map