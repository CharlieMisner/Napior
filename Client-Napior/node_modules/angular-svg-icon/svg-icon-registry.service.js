import { Injectable } from '@angular/core';
import { Http } from '@angular/http';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/observable/of';
import 'rxjs/add/operator/do';
import 'rxjs/add/operator/finally';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/share';
var SvgIconRegistryService = (function () {
    function SvgIconRegistryService(http) {
        this.http = http;
        this.iconsByUrl = new Map();
        this.iconsLoadingByUrl = new Map();
    }
    SvgIconRegistryService.prototype.loadSvg = function (url) {
        var _this = this;
        if (this.iconsByUrl.has(url)) {
            return Observable.of(this.iconsByUrl.get(url));
        }
        else if (this.iconsLoadingByUrl.has(url)) {
            return this.iconsLoadingByUrl.get(url);
        }
        else {
            var o = this.http.get(url)
                .map(function (res) {
                var div = document.createElement('DIV');
                div.innerHTML = res.text();
                return div.querySelector('svg');
            })
                .do(function (svg) {
                _this.iconsByUrl.set(url, svg);
            })
                .finally(function () {
                _this.iconsLoadingByUrl.delete(url);
            })
                .share();
            this.iconsLoadingByUrl.set(url, o);
            return o;
        }
    };
    SvgIconRegistryService.prototype.unloadSvg = function (url) {
        if (this.iconsByUrl.has(url)) {
            this.iconsByUrl.delete(url);
        }
    };
    return SvgIconRegistryService;
}());
export { SvgIconRegistryService };
SvgIconRegistryService.decorators = [
    { type: Injectable },
];
SvgIconRegistryService.ctorParameters = function () { return [
    { type: Http, },
]; };
//# sourceMappingURL=svg-icon-registry.service.js.map