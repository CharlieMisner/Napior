(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/http'), require('rxjs/Observable'), require('rxjs/add/observable/of'), require('rxjs/add/operator/do'), require('rxjs/add/operator/finally'), require('rxjs/add/operator/map'), require('rxjs/add/operator/share')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/http', 'rxjs/Observable', 'rxjs/add/observable/of', 'rxjs/add/operator/do', 'rxjs/add/operator/finally', 'rxjs/add/operator/map', 'rxjs/add/operator/share'], factory) :
	(factory((global['angular-svg-icon'] = global['angular-svg-icon'] || {}),global.ng.core,global.ng.common,global.ng.http,global.Rx));
}(this, (function (exports,_angular_core,_angular_common,_angular_http,rxjs_Observable) { 'use strict';

var __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
exports.SvgIconRegistryService = (function () {
    function SvgIconRegistryService(http) {
        this.http = http;
        this.iconsByUrl = new Map();
        this.iconsLoadingByUrl = new Map();
    }
    SvgIconRegistryService.prototype.loadSvg = function (url) {
        var _this = this;
        if (this.iconsByUrl.has(url)) {
            return rxjs_Observable.Observable.of(this.iconsByUrl.get(url));
        }
        else if (this.iconsLoadingByUrl.has(url)) {
            return this.iconsLoadingByUrl.get(url);
        }
        else {
            var o = this.http.get(url)
                .map(function (res) {
                var div = document.createElement('DIV');
                div.innerHTML = res.text();
                return div.querySelector('svg');
            })
                .do(function (svg) {
                _this.iconsByUrl.set(url, svg);
            })
                .finally(function () {
                _this.iconsLoadingByUrl.delete(url);
            })
                .share();
            this.iconsLoadingByUrl.set(url, o);
            return o;
        }
    };
    SvgIconRegistryService.prototype.unloadSvg = function (url) {
        if (this.iconsByUrl.has(url)) {
            this.iconsByUrl.delete(url);
        }
    };
    return SvgIconRegistryService;
}());
exports.SvgIconRegistryService = __decorate$2([
    _angular_core.Injectable(),
    __metadata$1("design:paramtypes", [_angular_http.Http])
], exports.SvgIconRegistryService);

var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
exports.SvgIconComponent = (function () {
    function SvgIconComponent(element, renderer, iconReg) {
        this.element = element;
        this.renderer = renderer;
        this.iconReg = iconReg;
    }
    SvgIconComponent.prototype.ngOnInit = function () {
        this.init();
    };
    SvgIconComponent.prototype.ngOnDestroy = function () {
        this.destroy();
    };
    SvgIconComponent.prototype.ngOnChanges = function (changeRecord) {
        if (changeRecord['src']) {
            this.destroy();
            this.init();
        }
    };
    SvgIconComponent.prototype.init = function () {
        var _this = this;
        this.icnSub = this.iconReg.loadSvg(this.src).subscribe(function (svg) {
            _this.setSvg(svg);
        });
    };
    SvgIconComponent.prototype.destroy = function () {
        if (this.icnSub) {
            this.icnSub.unsubscribe();
        }
    };
    SvgIconComponent.prototype.setSvg = function (svg) {
        var icon = svg.cloneNode(true);
        var elem = this.element.nativeElement;
        elem.innerHTML = '';
        this.renderer.projectNodes(elem, [icon]);
    };
    return SvgIconComponent;
}());
__decorate$1([
    _angular_core.Input(),
    __metadata("design:type", String)
], exports.SvgIconComponent.prototype, "src", void 0);
exports.SvgIconComponent = __decorate$1([
    _angular_core.Component({
        selector: 'svg-icon',
        styles: [':host { display:inline-block; }'],
        template: '<ng-content></ng-content>'
    }),
    __metadata("design:paramtypes", [_angular_core.ElementRef, _angular_core.Renderer,
        exports.SvgIconRegistryService])
], exports.SvgIconComponent);
function SVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, http) {
    return parentRegistry || new exports.SvgIconRegistryService(http);
}
var SVG_ICON_REGISTRY_PROVIDER = {
    provide: exports.SvgIconRegistryService,
    deps: [[new _angular_core.Optional(), new _angular_core.SkipSelf(), exports.SvgIconRegistryService], _angular_http.Http],
    useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY
};

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
exports.AngularSvgIconModule = (function () {
    function AngularSvgIconModule() {
    }
    return AngularSvgIconModule;
}());
exports.AngularSvgIconModule = __decorate([
    _angular_core.NgModule({
        imports: [
            _angular_common.CommonModule,
            _angular_http.HttpModule
        ],
        declarations: [exports.SvgIconComponent],
        providers: [SVG_ICON_REGISTRY_PROVIDER],
        exports: [exports.SvgIconComponent]
    })
], exports.AngularSvgIconModule);

exports.SVG_ICON_REGISTRY_PROVIDER_FACTORY = SVG_ICON_REGISTRY_PROVIDER_FACTORY;
exports.SVG_ICON_REGISTRY_PROVIDER = SVG_ICON_REGISTRY_PROVIDER;

Object.defineProperty(exports, '__esModule', { value: true });

})));
